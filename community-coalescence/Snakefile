from os.path import join
import pandas as pd

configfile: "config/config.yaml"

# Import list of sample names and metadata.
# Columns "filename" and "sample" are required for processing.
# Column "filename" should be in the format "16S-[WELL]L[0:7]", i.e. "16S-A12-L2"
# There should be no underscores in the file or the sample name.
df=pd.read_table(config['samplesheet'], header=0)
df['group'] = df['group'].fillna("blank")
df['fullfilename']=df['filename'] + "_" + df['sample']
df['trimfilename']=df['group'] + "/R1/" + df['fullfilename']
groups=(df['group'].unique()).tolist()
demuxedfiles=df['filename'].tolist()
biosamples=df['sample'].tolist()
fullfilenames=df['fullfilename'].tolist()
trimfilenames=df['trimfilename'].tolist()
def sampleToFile(s):
    return df.query('sample == s')['filename'].tolist()[0]
def fileToSample(file):
    return df.query('filename == file')['sample'].tolist()[0]

# Import indices for demultiplexing.
dfindices=pd.read_table(config['indices'], header=0)
phases=dfindices['phase'].tolist()

# Import list of FASTQ paths and shortened filenames.
dffastq=pd.read_table("config/fastq.txt", sep=" ", header=None)
dffastq.columns=["read1","read2","file"]
# Generate a list of sample files.
files=list(set(dffastq['file'].tolist()))

rule all:
    input:
        #expand("workflow/out/demux/{sample}-R1.fastq.gz", sample=files),
        #expand("workflow/out/demux/R1/{sample}-L{phase}.fastq.gz", sample=files, phase=phases),
        #expand("workflow/out/trimmed/{trimfilename}.fastq.gz", trimfilename=trimfilenames),
        #expand("".join([config["trimdir"],"/{group}/summary.txt"]), group=groups)
        #expand("".join([config["trimdir"],"/{group}/lowReadsSummary.txt"]), group=groups)
        #expand("workflow/out/{group}/DADA2_output/seqtab_all.rds", group=groups)
        #expand("workflow/out/{group}/DADA2_output/dsvs_msa.tree", group=groups)
        expand("workflow/out/{group}/DADA2_output/L6_summary.txt", group=groups)
        #expand("workflow/out/{group}/DADA2_output/ps_all.rds", group=groups)

include: "workflow/rules/processRawReads.smk"
include: "workflow/rules/generatePhyloseq.smk"
